/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
    1 2 3 4 5
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {


    ListNode* odd = nullptr, *oddH = nullptr, *even = nullptr, *evenH = nullptr;
    if(!head || !head->next || !head->next->next) return head;

    odd = head;
    oddH = odd;
    even = head->next;
    evenH = even; 

    while(even && even->next)
     {
         odd->next = odd->next->next;
         even->next = even->next->next;
         odd = odd->next;
         even = even->next;

     }

     odd->next = evenH;
    return oddH;

    }
};
